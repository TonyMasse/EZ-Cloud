{
    "name": "ez-cloud-server",
    "version": "1.2.1",
    "description": "Server backend for EZ-Cloud for Legacy SIEM",
    "main": "index.js",
    "scripts": {
        "buildVersion": "npx genversion --semi --source ./package.json src/shared/version.js",
        "start": "npm run buildVersion && node src/index.js",
        "dev": "npm run buildVersion && nodemon src/index.js --ignore ez-market-place/*",
        "lint": "eslint --fix src",
        "test": "mocha --exit",
        "buildWindows": "echo \"ðŸš€ Build (ðŸŽ¯ Windows)...\" && npm run buildVersion && webpack --config webpack.config.windows.js",
        "buildWindowsFrontendAndImport": "npm run buildVersion && cd frontend && npm install && quasar build && (robocopy dist\\spa\\ ..\\public_web_root\\ /COPYALL /MIR /NJH) ^& IF %ERRORLEVEL% LEQ 1 SET ERRORLEVEL = 0 && cd..",
        "buildWindowsWebpack": "echo \"ðŸš€ Webpack (ðŸŽ¯ Windows)...\" && webpack --config webpack.config.windows.js",
        "buildWindowsWithFrontend": "echo \"ðŸš€ Build With Frontend (ðŸŽ¯ Windows)...\" && npm run buildVersion && npm run buildWindowsFrontendAndImport && npm run buildWindowsWebpack",
        "buildWindowsFull": "echo \"ðŸš€ Build Full (ðŸŽ¯ Windows)...\" && npm run buildWindowsWithFrontend",
        "buildDockerGenerateHttpsKeyAndCert": "echo \"ðŸš€ Generate HTTPS Key and Cert (ðŸŽ¯ Docker)...\" && rm -f config.sample/https.keytmp.pem config.sample/https.cert.pem && openssl req -nodes -x509 -newkey rsa:2048 -keyout config.sample/https.keytmp.pem -out config.sample/https.cert.pem -days 365 -subj \"/C=UK/ST=Berkshire/L=Maidenhead/O=LogRhythm Ltd/CN=Tony Masse/emailAddress=tony.masse@logrhythm.com\" && openssl rsa -in config.sample/https.keytmp.pem -out config.sample/https.key.pem && rm -f config.sample/https.keytmp.pem",
        "buildDockerWebPack": "echo \"ðŸš€ Run Webpack (ðŸŽ¯ Docker)...\" && webpack --config webpack.config.docker.js",
        "buildDocker": "echo \"ðŸš€ Build (ðŸŽ¯ Docker)...\" && npm run buildVersion && npm run buildDockerGenerateHttpsKeyAndCert && npm run buildDockerWebPack",
        "buildDockerFrontendAndImport": "echo \"ðŸš€ Build Frontend and Import (ðŸŽ¯ Docker)...\" && cd frontend && npm install && export NODE_OPTIONS=--openssl-legacy-provider && quasar build && export NODE_OPTIONS= && rm -rf ../public_web_root/css/* && rm -rf ../public_web_root/js/* && cp -af dist/spa/* ../public_web_root/ && cd ..",
        "buildDockerWithFrontend": "echo \"ðŸš€ Build With Frontend (ðŸŽ¯ Docker)...\" && npm run buildDockerFrontendAndImport && npm run buildDocker",
        "buildDockerFull": "echo \"ðŸš€ Build Full (ðŸŽ¯ Docker)...\" && npm run buildDockerWithFrontend",
        "buildDockerCreateImage": "echo \"ðŸš€ Create Image (ðŸŽ¯ Docker)...\" && cd dist && chmod +x _docker.build-oc-admin.sh && ./_docker.build-oc-admin.sh && cd ..",
        "buildDockerCreateImageLatest": "echo \"ðŸš€ Create Image (ðŸŽ¯ Docker)...\" && cd dist && chmod +x _docker.build-oc-admin.sh && ./_docker.build-oc-admin.sh --latest && cd ..",
        "buildDockerFullAndCreateImage": "echo \"ðŸš€ Build Full And Create Image (ðŸŽ¯ Docker)...\" && npm run buildDockerFull && npm run buildDockerCreateImage",
        "buildDockerFullAndCreateImageLatest": "echo \"ðŸš€ Build Full And Create Image (ðŸŽ¯ Docker)...\" && npm run buildDockerFull && npm run buildDockerCreateImageLatest",
        "buildDockerPublishImage": "echo \"ðŸš€ Publish Image (ðŸŽ¯ Docker)...\" && docker login && docker push --all-tags tonymasse/oc-admin",
        "buildDockerFullAndPublishImage": "echo \"ðŸš€ Build Full And Create And Publish Image (ðŸŽ¯ Docker)...\" && npm run buildDockerFullAndCreateImage && npm run buildDockerPublishImage",
        "buildDockerFullAndPublishImageLatest": "echo \"ðŸš€ Build Full And Create And Publish Image (ðŸŽ¯ Docker)...\" && npm run buildDockerFullAndCreateImageLatest && npm run buildDockerPublishImage",
        "installService": "node installer/installService.js",
        "uninstallService": "node installer/uninstallService.js"
    },
    "author": "Tony MassÃ© <tony.masse@logrhythm.com>",
    "license": "MIT",
    "repository": {
        "type": "git",
        "url": "https://github.com/logrhythm/EZ-Cloud.git"
    },
    "dependencies": {
        "cors": "^2.8.5",
        "cross-spawn": "^7.0.3",
        "crypto-js": "^4.1.1",
        "dotenv": "^16.0.1",
        "express": "^4.18.1",
        "fs-extra": "^10.1.0",
        "helmet": "^5.1.1",
        "js-yaml": "^4.1.0",
        "jsonwebtoken": "^8.5.1",
        "morgan": "^1.10.0",
        "node-windows": "1.0.0-beta.7",
        "pg": "^8.7.3",
        "simple-ssh": "^1.1.0",
        "socket.io": "^4.5.1",
        "tedious": "^11.8.0"
    },
    "devDependencies": {
        "copy-webpack-plugin": "^9.1.0",
        "eslint": "^7.32.0",
        "eslint-config-airbnb-base": "^14.2.1",
        "eslint-plugin-import": "^2.25.4",
        "genversion": "^3.0.2",
        "innosetup": "^6.0.5",
        "mocha": "^8.4.0",
        "nodemon": "^2.0.15",
        "raw-loader": "^4.0.2",
        "supertest": "^6.2.1",
        "webpack": "^5.66.0",
        "webpack-cli": "^4.9.1",
        "webpack-shell-plugin-next": "^2.2.2",
        "yargs": "^17.3.1"
    },
    "optionalDependencies": {
        "bufferutil": "^4.0.3",
        "utf-8-validate": "^5.0.5"
    },
    "overrides": {
        "minimist": "^1.2.5",
        "nanoid": "^3.1.31",
        "minimatch": "^3.0.5",
        "follow-redirects": "^1.14.8",
        "@author.io/arg": "^1.3.23",
        "uuid": "^8.3.0"
    }
}
